from typing import Final


class Rom:
    SPRITES: Final = [
        [0xF0, 0x90, 0x90, 0x90, 0xF0],
        [0x20, 0x60, 0x20, 0x20, 0x70],
        [0xF0, 0x10, 0xF0, 0x80, 0xF0],
        [0xF0, 0x10, 0xF0, 0x10, 0xF0],
        [0x90, 0x90, 0xF0, 0x10, 0x10],
        [0xF0, 0x80, 0xF0, 0x10, 0xF0],
        [0xF0, 0x80, 0xF0, 0x90, 0xF0],
        [0xF0, 0x10, 0x20, 0x40, 0x40],
        [0xF0, 0x90, 0xF0, 0x90, 0xF0],
        [0xF0, 0x90, 0xF0, 0x10, 0xF0],
        [0xF0, 0x90, 0xF0, 0x90, 0x90],
        [0xE0, 0x90, 0xE0, 0x90, 0xE0],
        [0xF0, 0x80, 0x80, 0x80, 0xF0],
        [0xE0, 0x90, 0x90, 0x90, 0xE0],
        [0xF0, 0x80, 0xF0, 0x80, 0xF0],
        [0xF0, 0x80, 0xF0, 0x80, 0x80],
    ]

    def __init__(self, *, size: int) -> None:
        memory = [byte for sprite in self.SPRITES for byte in sprite]
        padding = size - len(memory)
        self._memory = memory + [0] * padding

    def __repr__(self) -> str:
        return f'Rom(size={len(self)})'

    def __len__(self) -> int:
        return len(self._memory)

    def __getitem__(self, address: int, /) -> int:
        return self._memory[address]

    def __setitem__(self, address: int, value: int, /) -> None:
        raise RuntimeError('Writing on ROM')
